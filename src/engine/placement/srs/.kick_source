The Tetris-Implementation of the Shetris-Project, written from scratch.

Copyright (C) 2022 Shengdi 'shc' Chen (me@shengdichen.xyz)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.


0. obtain from Tetris-Wiki:
    ->  https://tetris.wiki/Super_Rotation_System#Wall_Kicks
// I
0->R 	( 0, 0) 	(-2, 0) 	(+1, 0) 	(-2,-1) 	(+1,+2)
R->0 	( 0, 0) 	(+2, 0) 	(-1, 0) 	(+2,+1) 	(-1,-2)
R->2 	( 0, 0) 	(-1, 0) 	(+2, 0) 	(-1,+2) 	(+2,-1)
2->R 	( 0, 0) 	(+1, 0) 	(-2, 0) 	(+1,-2) 	(-2,+1)
2->L 	( 0, 0) 	(+2, 0) 	(-1, 0) 	(+2,+1) 	(-1,-2)
L->2 	( 0, 0) 	(-2, 0) 	(+1, 0) 	(-2,-1) 	(+1,+2)
L->0 	( 0, 0) 	(+1, 0) 	(-2, 0) 	(+1,-2) 	(-2,+1)
0->L 	( 0, 0) 	(-1, 0) 	(+2, 0) 	(-1,+2) 	(+2,-1)

// others
0->R 	( 0, 0) 	(-1, 0) 	(-1,+1) 	( 0,-2) 	(-1,-2)
R->0 	( 0, 0) 	(+1, 0) 	(+1,-1) 	( 0,+2) 	(+1,+2)
R->2 	( 0, 0) 	(+1, 0) 	(+1,-1) 	( 0,+2) 	(+1,+2)
2->R 	( 0, 0) 	(-1, 0) 	(-1,+1) 	( 0,-2) 	(-1,-2)
2->L 	( 0, 0) 	(+1, 0) 	(+1,+1) 	( 0,-2) 	(+1,-2)
L->2 	( 0, 0) 	(-1, 0) 	(-1,-1) 	( 0,+2) 	(-1,+2)
L->0 	( 0, 0) 	(-1, 0) 	(-1,-1) 	( 0,+2) 	(-1,+2)
0->L 	( 0, 0) 	(+1, 0) 	(+1,+1) 	( 0,-2) 	(+1,-2)


1.  prepend "+" to all 0 (0 -> +0)
// I
0->R 	(+0, +0) 	(-2, +0) 	(+1, +0) 	(-2, -1) 	(+1, +2)
R->0 	(+0, +0) 	(+2, +0) 	(-1, +0) 	(+2, +1) 	(-1, -2)
R->2 	(+0, +0) 	(-1, +0) 	(+2, +0) 	(-1, +2) 	(+2, -1)
2->R 	(+0, +0) 	(+1, +0) 	(-2, +0) 	(+1, -2) 	(-2, +1)
2->L 	(+0, +0) 	(+2, +0) 	(-1, +0) 	(+2, +1) 	(-1, -2)
L->2 	(+0, +0) 	(-2, +0) 	(+1, +0) 	(-2, -1) 	(+1, +2)
L->0 	(+0, +0) 	(+1, +0) 	(-2, +0) 	(+1, -2) 	(-2, +1)
0->L 	(+0, +0) 	(-1, +0) 	(+2, +0) 	(-1, +2) 	(+2, -1)

// others
0->R 	(+0, +0) 	(-1, +0) 	(-1, +1) 	(+0, -2) 	(-1, -2)
R->0 	(+0, +0) 	(+1, +0) 	(+1, -1) 	(+0, +2) 	(+1, +2)
R->2 	(+0, +0) 	(+1, +0) 	(+1, -1) 	(+0, +2) 	(+1, +2)
2->R 	(+0, +0) 	(-1, +0) 	(-1, +1) 	(+0, -2) 	(-1, -2)
2->L 	(+0, +0) 	(+1, +0) 	(+1, +1) 	(+0, -2) 	(+1, -2)
L->2 	(+0, +0) 	(-1, +0) 	(-1, -1) 	(+0, +2) 	(-1, +2)
L->0 	(+0, +0) 	(-1, +0) 	(-1, -1) 	(+0, +2) 	(-1, +2)
0->L 	(+0, +0) 	(+1, +0) 	(+1, +1) 	(+0, -2) 	(+1, -2)


2.  flip the signs of the second entry (our positive vertical direction is
downwards)
    a.  all negative to x
    b.  all positive to -
    c.  all x to +
// I
0->R 	(+0, +0) 	(-2, +0) 	(+1, +0) 	(-2, +1) 	(+1, -2)
R->0 	(+0, +0) 	(+2, +0) 	(-1, +0) 	(+2, -1) 	(-1, +2)
R->2 	(+0, +0) 	(-1, +0) 	(+2, +0) 	(-1, -2) 	(+2, +1)
2->R 	(+0, +0) 	(+1, +0) 	(-2, +0) 	(+1, +2) 	(-2, -1)
2->L 	(+0, +0) 	(+2, +0) 	(-1, +0) 	(+2, -1) 	(-1, +2)
L->2 	(+0, +0) 	(-2, +0) 	(+1, +0) 	(-2, +1) 	(+1, -2)
L->0 	(+0, +0) 	(+1, +0) 	(-2, +0) 	(+1, +2) 	(-2, -1)
0->L 	(+0, +0) 	(-1, +0) 	(+2, +0) 	(-1, -2) 	(+2, +1)

// others
0->R 	(+0, +0) 	(-1, +0) 	(-1, -1) 	(+0, +2) 	(-1, +2)
R->0 	(+0, +0) 	(+1, +0) 	(+1, +1) 	(+0, -2) 	(+1, -2)
R->2 	(+0, +0) 	(+1, +0) 	(+1, +1) 	(+0, -2) 	(+1, -2)
2->R 	(+0, +0) 	(-1, +0) 	(-1, -1) 	(+0, +2) 	(-1, +2)
2->L 	(+0, +0) 	(+1, +0) 	(+1, -1) 	(+0, +2) 	(+1, +2)
L->2 	(+0, +0) 	(-1, +0) 	(-1, +1) 	(+0, -2) 	(-1, -2)
L->0 	(+0, +0) 	(-1, +0) 	(-1, +1) 	(+0, -2) 	(-1, -2)
0->L 	(+0, +0) 	(+1, +0) 	(+1, -1) 	(+0, +2) 	(+1, +2)


3.  shift left and right entries! (our first axis is downwards in pos0!)
:'<,'>sm/(\(..\), \(..\))/(\2, \1)/g
// I
0->R 	(+0, +0) 	(+0, -2) 	(+0, +1) 	(+1, -2) 	(-2, +1)
R->0 	(+0, +0) 	(+0, +2) 	(+0, -1) 	(-1, +2) 	(+2, -1)
R->2 	(+0, +0) 	(+0, -1) 	(+0, +2) 	(-2, -1) 	(+1, +2)
2->R 	(+0, +0) 	(+0, +1) 	(+0, -2) 	(+2, +1) 	(-1, -2)
2->L 	(+0, +0) 	(+0, +2) 	(+0, -1) 	(-1, +2) 	(+2, -1)
L->2 	(+0, +0) 	(+0, -2) 	(+0, +1) 	(+1, -2) 	(-2, +1)
L->0 	(+0, +0) 	(+0, +1) 	(+0, -2) 	(+2, +1) 	(-1, -2)
0->L 	(+0, +0) 	(+0, -1) 	(+0, +2) 	(-2, -1) 	(+1, +2)

// others
0->R 	(+0, +0) 	(+0, -1) 	(-1, -1) 	(+2, +0) 	(+2, -1)
R->0 	(+0, +0) 	(+0, +1) 	(+1, +1) 	(-2, +0) 	(-2, +1)
R->2 	(+0, +0) 	(+0, +1) 	(+1, +1) 	(-2, +0) 	(-2, +1)
2->R 	(+0, +0) 	(+0, -1) 	(-1, -1) 	(+2, +0) 	(+2, -1)
2->L 	(+0, +0) 	(+0, +1) 	(-1, +1) 	(+2, +0) 	(+2, +1)
L->2 	(+0, +0) 	(+0, -1) 	(+1, -1) 	(-2, +0) 	(-2, -1)
L->0 	(+0, +0) 	(+0, -1) 	(+1, -1) 	(-2, +0) 	(-2, -1)
0->L 	(+0, +0) 	(+0, +1) 	(-1, +1) 	(+2, +0) 	(+2, +1)


4.  swap rows to the required order
        R->0
        L->0
        0->L
        2->L
        L->2
        R->2
        2->R
        0->R
// I
R->0 	(+0, +0) 	(+0, +2) 	(+0, -1) 	(-1, +2) 	(+2, -1)
L->0 	(+0, +0) 	(+0, +1) 	(+0, -2) 	(+2, +1) 	(-1, -2)
0->L 	(+0, +0) 	(+0, -1) 	(+0, +2) 	(-2, -1) 	(+1, +2)
2->L 	(+0, +0) 	(+0, +2) 	(+0, -1) 	(-1, +2) 	(+2, -1)
L->2 	(+0, +0) 	(+0, -2) 	(+0, +1) 	(+1, -2) 	(-2, +1)
R->2 	(+0, +0) 	(+0, -1) 	(+0, +2) 	(-2, -1) 	(+1, +2)
2->R 	(+0, +0) 	(+0, +1) 	(+0, -2) 	(+2, +1) 	(-1, -2)
0->R 	(+0, +0) 	(+0, -2) 	(+0, +1) 	(+1, -2) 	(-2, +1)

// others
R->0 	(+0, +0) 	(+0, +1) 	(+1, +1) 	(-2, +0) 	(-2, +1)
L->0 	(+0, +0) 	(+0, -1) 	(+1, -1) 	(-2, +0) 	(-2, -1)
0->L 	(+0, +0) 	(+0, +1) 	(-1, +1) 	(+2, +0) 	(+2, +1)
2->L 	(+0, +0) 	(+0, +1) 	(-1, +1) 	(+2, +0) 	(+2, +1)
L->2 	(+0, +0) 	(+0, -1) 	(+1, -1) 	(-2, +0) 	(-2, -1)
R->2 	(+0, +0) 	(+0, +1) 	(+1, +1) 	(-2, +0) 	(-2, +1)
2->R 	(+0, +0) 	(+0, -1) 	(-1, -1) 	(+2, +0) 	(+2, -1)
0->R 	(+0, +0) 	(+0, -1) 	(-1, -1) 	(+2, +0) 	(+2, -1)


5.  final formatting:
    1.  trim away the first column
        :'<,'>sm/.\{-}(/(
    2.  convert each row to a tuple
        :'<,'>sm/).\{-}(/), (/g
    3.  trim away extra spaces
        :'<,'>sm/\(.*\)/(\1),
// I
((+0, +0), (+0, +2), (+0, -1), (-1, +2), (+2, -1)),
((+0, +0), (+0, +1), (+0, -2), (+2, +1), (-1, -2)),
((+0, +0), (+0, -1), (+0, +2), (-2, -1), (+1, +2)),
((+0, +0), (+0, +2), (+0, -1), (-1, +2), (+2, -1)),
((+0, +0), (+0, -2), (+0, +1), (+1, -2), (-2, +1)),
((+0, +0), (+0, -1), (+0, +2), (-2, -1), (+1, +2)),
((+0, +0), (+0, +1), (+0, -2), (+2, +1), (-1, -2)),
((+0, +0), (+0, -2), (+0, +1), (+1, -2), (-2, +1)),

// others
((+0, +0), (+0, +1), (+1, +1), (-2, +0), (-2, +1)),
((+0, +0), (+0, -1), (+1, -1), (-2, +0), (-2, -1)),
((+0, +0), (+0, +1), (-1, +1), (+2, +0), (+2, +1)),
((+0, +0), (+0, +1), (-1, +1), (+2, +0), (+2, +1)),
((+0, +0), (+0, -1), (+1, -1), (-2, +0), (-2, -1)),
((+0, +0), (+0, +1), (+1, +1), (-2, +0), (-2, +1)),
((+0, +0), (+0, -1), (-1, -1), (+2, +0), (+2, -1)),
((+0, +0), (+0, -1), (-1, -1), (+2, +0), (+2, -1)),

